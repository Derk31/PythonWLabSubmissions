{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPEWuSOwlqmSQSiKLAn5SWn",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Derk31/PythonWLabSubmissions/blob/main/Derek_Ast_Lab_1_W\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dUF4PIK2WClx"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Derek Ast  \n",
        "Lab 1  \n",
        "W"
      ],
      "metadata": {
        "id": "zoAAsEy8WGTM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 3) Weighted Average Forecast\n",
        "\n",
        "pessimistic = float(input('Enter pessimistic forecast:'))\n",
        "middle = float(input('Enter middle forecast.....:'))\n",
        "optimistic = float(input('Enter optimistic forecast.:'))\n",
        "\n",
        "weightedAverage = (.25 * pessimistic + .5 * middle + .25 * optimistic)\n",
        "\n",
        "print('Weighted Average Forecast =', round(weightedAverage))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "W1r8RZTCWKaJ",
        "outputId": "e643c720-250b-4f55-90eb-80a7b933ad72"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter pessimistic forecast:100\n",
            "Enter middle forecast.....:125\n",
            "Enter optimistic forecast.:175\n",
            "Weighted Average Forecast = 131\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 4) BMI - Healthy Range\n",
        "\n",
        "height = float(input('Input your height in inches:'))\n",
        "\n",
        "weight_low = 18.5 * height ** 2 / 703\n",
        "weight_high = 24.9 * height ** 2 / 703\n",
        "\n",
        "print('For a height of', height, 'inches, the healthy weight range is between \\n',\n",
        "round(weight_low), 'and', round(weight_high), 'pounds.')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "gSoik0MgXM3D",
        "outputId": "5674baa2-dcc4-430c-c2d0-22eeb58db9be"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Input your height in inches:66\n",
            "For a height of 66.0 inches, the healthy weight range is between \n",
            " 115 and 154 pounds.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "vvbPxSMiaGD-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ZilvzPyYaEDt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "QoOYiC8jaAdi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "NDKzT0ghZf-A"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "awhBFOL_ZcKa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "nzy0xTn2YnIS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ZEM_6tY1XJd0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "MrPR19y1XBeY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "IvbvnSCEWzkw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "1ouluzqfWokC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "oEvfB7qvWU9W"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}